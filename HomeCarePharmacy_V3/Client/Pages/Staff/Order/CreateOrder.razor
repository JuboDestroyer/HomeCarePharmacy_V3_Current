<!-- OrderIndex/create page -->
@page "/OrderIndex/create/"
@using HomeCarePharmacy_Project.Client.Static
@using HomeCarePharmacy_V3.Shared.Domain
@inject HttpClient _client
@inject NavigationManager _navManager

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create New Order - HomeCare Pharmacy SG</title>
    <link rel="stylesheet" href="css/mainstyles.css">
</head>

<header>
    <div class="main-header">
        <img src="Icon.png" alt="HomeCare Pharmacy Logo" />
    </div>
</header>

<h3 class="card-title">Create New Order</h3>

<main>
    <EditForm Model="@order" OnValidSubmit="@Createorder">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Date: </label>
            <div>
                <InputDate @bind-Value="@order.OrderDate" class="form-control" />
                <ValidationMessage For="@(() => order.OrderDate)" />
            </div>
        </div>

        <div class="form-group">
            <label>Status: </label>
            <div>
                <InputText @bind-Value="@order.OrderStatus" class="form-control" />
                <ValidationMessage For="@(() => order.OrderStatus)" />
            </div>
        </div>

        <div class="form-group">
            <label>Customer: </label>
            <div>
                <InputSelect @bind-Value="@order.CustomerId" class="form-control">
                    <option value="">-- Select Customer --</option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.CustomerId">@customer.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => order.CustomerId)" />
            </div>
        </div>


        <div class="form-group">
            <label>Staff: </label>
            <div>
                <InputSelect @bind-Value="@order.StaffId" class="form-control">
                    <option value="">-- Select Staff --</option>
                    @if (Staffs != null)
                    {
                        foreach (var staff in Staffs)
                        {
                            <option value="@staff.StaffId">@staff.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => order.StaffId)" />
            </div>
        </div>

        <button type="submit" class="btn btn-success btn-block">
            Add New Order
        </button>
    </EditForm>
</main>

<footer>
    &copy; 2023 Online Pharmacy. All rights reserved.
</footer>

</html>

@code {
    Order order = new Order();
    private IList<Customer>? Customers;
    private IList<Staff>? Staffs;

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
    }

    private async Task Createorder()
    {
        await _client.PostAsJsonAsync(Endpoints.OrdersEndpoint, order);
        _navManager.NavigateTo("/OrderIndex/");
    }
}

